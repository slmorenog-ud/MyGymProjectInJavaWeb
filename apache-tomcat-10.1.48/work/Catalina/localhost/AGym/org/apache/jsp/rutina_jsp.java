/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.48
 * Generated at: 2025-10-24 08:04:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.agym.modelo.Rutina;
import com.agym.modelo.Ejercicio;
import java.util.List;
import com.agym.modelo.Rutina.DiaRutina;
import java.util.Map;

public final class rutina_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.agym.modelo.Rutina");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("com.agym.modelo.Rutina.DiaRutina");
    _jspx_imports_classes.add("com.agym.modelo.Ejercicio");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    Rutina rutina = (Rutina) request.getAttribute("rutina");
    String objetivo = (String) request.getAttribute("objetivoUsuario");

    // Mapa para traducir los valores del objetivo a texto legible
    Map<String, String> traduccionObjetivos = Map.of(
        "bajar_peso", "Bajar de Peso",
        "subir_peso", "Subir de Peso (Hipertrofia)",
        "fortalecer", "Ganar Fuerza"
    );
    String objetivoLegible = traduccionObjetivos.getOrDefault(objetivo, "General");

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"es\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Tu Rutina Personalizada - MyGymJW</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/styles.css\">\n");
      out.write("    <style>\n");
      out.write("        .rutina-dia { margin-bottom: 30px; }\n");
      out.write("        .ejercicio { display: flex; align-items: center; margin-bottom: 20px; border-bottom: 1px solid #eee; padding-bottom: 20px; }\n");
      out.write("        .ejercicio img { width: 150px; height: 100px; object-fit: cover; margin-right: 20px; border-radius: 4px; }\n");
      out.write("        .ejercicio-info { flex-grow: 1; }\n");
      out.write("        .ejercicio-info h4 { margin: 0 0 5px 0; }\n");
      out.write("        .ejercicio-info p { margin: 0; }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <header>\n");
      out.write("        <h1><a href=\"dashboard.jsp\">MyGymJW</a></h1>\n");
      out.write("        <nav>\n");
      out.write("            <a href=\"logout\">Cerrar Sesión</a>\n");
      out.write("        </nav>\n");
      out.write("    </header>\n");
      out.write("    <main>\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <h2>Aquí está tu rutina:</h2>\n");
      out.write("            ");
 if (objetivo != null && !objetivo.isEmpty()) { 
      out.write("\n");
      out.write("                <h4 style=\"text-align: center; color: #2E4052; margin-top: -10px; margin-bottom: 25px;\">Tu objetivo principal: <strong>");
      out.print( objetivoLegible );
      out.write("</strong></h4>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("            ");
 if (rutina != null && !rutina.getDias().isEmpty()) { 
      out.write("\n");
      out.write("                ");
 for (Rutina.DiaRutina dia : rutina.getDias()) { 
      out.write("\n");
      out.write("                    <div class=\"rutina-dia\">\n");
      out.write("                        <h3>");
      out.print( dia.getNombre() );
      out.write("</h3>\n");
      out.write("                        ");
 for (Ejercicio ejercicio : dia.getEjercicios()) { 
      out.write("\n");
      out.write("                            <div class=\"ejercicio\">\n");
      out.write("                                <img src=\"");
      out.print( ejercicio.getImagenUrl() );
      out.write("\" alt=\"Demostración de ");
      out.print( ejercicio.getNombre() );
      out.write("\">\n");
      out.write("                                <div class=\"ejercicio-info\">\n");
      out.write("                                    <h4>");
      out.print( ejercicio.getNombre() );
      out.write("</h4>\n");
      out.write("                                    <p><strong>Instrucciones:</strong> ");
      out.print( ejercicio.getDescripcion() );
      out.write("</p>\n");
      out.write("                                    <p><strong>Series y Repeticiones:</strong> ");
      out.print( ejercicio.getSeriesYRepeticiones() );
      out.write("</p>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                ");
 } 
      out.write("\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("                <p>No se pudo generar una rutina. Por favor, intenta de nuevo.</p>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("            <div class=\"actions-container\" style=\"display: flex; justify-content: center; gap: 15px; margin-top: 20px;\">\n");
      out.write("                <a href=\"dashboard.jsp\" class=\"btn btn-secondary\">Volver al Panel</a>\n");
      out.write("                <form action=\"guardarRutina\" method=\"post\" style=\"margin: 0;\">\n");
      out.write("                    <button type=\"submit\" class=\"btn\">Guardar Rutina</button>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </main>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
