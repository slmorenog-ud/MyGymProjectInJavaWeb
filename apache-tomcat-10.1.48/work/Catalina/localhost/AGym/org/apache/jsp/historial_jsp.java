/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.48
 * Generated at: 2025-10-24 08:03:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import com.agym.modelo.RutinaGuardada;
import com.agym.modelo.Ejercicio;
import com.agym.modelo.Rutina.DiaRutina;
import java.text.SimpleDateFormat;

public final class historial_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.agym.modelo.RutinaGuardada");
    _jspx_imports_classes.add("com.agym.modelo.Rutina.DiaRutina");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("com.agym.modelo.Ejercicio");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    List<RutinaGuardada> historial = (List<RutinaGuardada>) request.getAttribute("historialRutinas");
    SimpleDateFormat sdf = new SimpleDateFormat("dd 'de' MMMM 'de' yyyy 'a las' HH:mm");

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"es\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Mi Historial de Rutinas - MyGymJW</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/styles.css\">\n");
      out.write("    <style>\n");
      out.write("        .rutina-guardada {\n");
      out.write("            border: 1px solid #ddd;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            margin-bottom: 25px;\n");
      out.write("            padding: 20px;\n");
      out.write("        }\n");
      out.write("        .rutina-header {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            align-items: center;\n");
      out.write("            margin-bottom: 15px;\n");
      out.write("        }\n");
      out.write("        .rutina-header h3 {\n");
      out.write("            margin: 0;\n");
      out.write("        }\n");
      out.write("        .estado {\n");
      out.write("            padding: 5px 10px;\n");
      out.write("            border-radius: 15px;\n");
      out.write("            font-weight: bold;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("        .estado.guardada { background-color: #FFC857; }\n");
      out.write("        .estado.completada { background-color: #BDD9BF; color: #2E4052; }\n");
      out.write("        .ejercicio-simple {\n");
      out.write("            padding-left: 20px;\n");
      out.write("            border-left: 3px solid #eee;\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <header>\n");
      out.write("        <h1><a href=\"dashboard.jsp\">MyGymJW</a></h1>\n");
      out.write("        <nav>\n");
      out.write("            <a href=\"logout\">Cerrar Sesión</a>\n");
      out.write("        </nav>\n");
      out.write("    </header>\n");
      out.write("    <main>\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <h2>Mi Historial de Rutinas</h2>\n");
      out.write("\n");
      out.write("            ");
 if (historial == null || historial.isEmpty()) { 
      out.write("\n");
      out.write("                <p>Aún no has guardado ninguna rutina. ¡Genera una y guárdala para verla aquí!</p>\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("                ");
 for (RutinaGuardada rg : historial) { 
      out.write("\n");
      out.write("                    <div class=\"rutina-guardada\">\n");
      out.write("                        <div class=\"rutina-header\">\n");
      out.write("                            <h3>Rutina del ");
      out.print( sdf.format(rg.getFechaGuardada()) );
      out.write("</h3>\n");
      out.write("                            <span class=\"estado ");
      out.print( rg.getEstado().equalsIgnoreCase("Guardada") ? "guardada" : "completada" );
      out.write("\">\n");
      out.write("                                ");
      out.print( rg.getEstado() );
      out.write("\n");
      out.write("                            </span>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        ");
 for (DiaRutina dia : rg.getRutina().getDias()) { 
      out.write("\n");
      out.write("                            <h4>");
      out.print( dia.getNombre() );
      out.write("</h4>\n");
      out.write("                            ");
 for (Ejercicio ej : dia.getEjercicios()) { 
      out.write("\n");
      out.write("                                <div class=\"ejercicio-simple\">\n");
      out.write("                                    <p><strong>");
      out.print( ej.getNombre() );
      out.write(":</strong> ");
      out.print( ej.getSeriesYRepeticiones() );
      out.write("</p>\n");
      out.write("                                </div>\n");
      out.write("                            ");
 } 
      out.write("\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("                        ");
 if (rg.getEstado().equalsIgnoreCase("Guardada")) { 
      out.write("\n");
      out.write("                            <form action=\"marcarCompletada\" method=\"post\" style=\"text-align: right; margin-top: 15px;\">\n");
      out.write("                                <input type=\"hidden\" name=\"rutinaId\" value=\"");
      out.print( rg.getId() );
      out.write("\">\n");
      out.write("                                <button type=\"submit\" class=\"btn\">Marcar como Completada</button>\n");
      out.write("                            </form>\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                ");
 } 
      out.write("\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("            <a href=\"dashboard.jsp\" class=\"btn btn-secondary\" style=\"margin-top: 20px;\">Volver al Panel</a>\n");
      out.write("        </div>\n");
      out.write("    </main>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
